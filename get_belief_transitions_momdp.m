function [tau_mat,imat,maxdist] = get_belief_transitions_momdp( ps, T, probs1, probs2, att, interp, p_decay )

% derive the belief transition function. I.e., for a given initial belief
% at time t, and action a_t, what is the distribution over beliefs at t+1?
% 
% INPUTS
% ps: all possible belief states
% T: underlying transition function
% probs1: probabilities of each possible observation given signal is OFF (for a given attentional state)
% probs2: probabilities of each possible observation given signal is ON (for a given attentional state)
% att: attentional action taken (1=WEAK, 2=STRONG)
% interp: number of interpolation points
% p_decay: probability of decay back to WEAK attention at start of next
%           trial, despite choosing STRONG at end of current trial
% OUTPUTS
% tau_mat: the transition matrix for belief states (b x b')
% imat: for each initial belief state, observation, and timestep, this holds 1)
%           indices of interpolating belief points of successor, and 2) corresponding
%           weights
% maxdist: largest approximation err

nps=size(ps,1); % number of belief states
nx=size(probs1,2); % number of possible observations, x
N = size(T,3); % number of time steps, including 1+Nadd initial states
mat=zeros(nps,nx,3);
mat2 = zeros(nps,3);
mat(:,:,1)=ps(:,1)*probs1;
mat(:,:,2)=ps(:,2)*probs2;
mat(:,:,3)=ps(:,3)*probs1;
maxdist=0;
% interp interpolating values of ps
% with imat(.,.,.,:,1) being the indices of the interpolating points
%  and imat(.,.,.,:,2) being the probability weightings
imat=zeros(nps,nx,N,interp,2);
for n=1:N-1 % for all but the last step (i.e., the decision state)
    for j=1:nx % for each possible observation
        mat2(:,:) = mat(:,j,:);
        mat2 = mat2 ./ (1e-23 + sum(mat2,2)); % normalized posterior
        mat2 = mat2 * T(:,:,n); % propagate through transition matrix at END of time step
        [idx, d] = knnsearch( ps, mat2, 'K', interp );
        imat(:,j,n,:,1) = idx;
        w = 1./(d+1e-6);
        w = w./sum(w,2);
        imat(:,j,n,:,2) = w;
    end
end

% now averaging the observations according to the belief state;
% in the belief state runs, we don't do this - we use the
% observations generated by the actual states (since we, as
% experimenters can average over those)
tau_mat = zeros(2*nps,2*nps,N);
pxof=probs1/sum(probs1);
pxon=probs2/sum(probs2);
idx = zeros(nx,interp);
weights = zeros(nx,interp);
for n=1:N-1 % for all but the last step (i.e., the decision state)
    for i=1:2*nps % for each possible belief state
        ii=1+mod(i-1,nps);
        idx(:,:) = imat(ii,:,n,:,1);
        weights(:,:) = imat(ii,:,n,:,2);
        for j=1:nx % for each possible observation
            tau_mat(i,(att-1)*nps+idx(j,:),n) =  tau_mat(i,(att-1)*nps+idx(j,:),n) + weights(j,:)*(ps(ii,:)*[pxof(j) pxon(j) pxof(j)]');
        end
    end
end
% for the final time step (i.e., decision state), then what occurs here
% depends on attention and possible decay; i.e., if choosing STRONG
% attention, then there is a probability p_decay of nevertheless starting the
% next trial with WEAK attention
if att==2 % if we're considering choice of STRONG attention at final time step
    tau_mat(:,nps,end) = p_decay;
    tau_mat(:,2*nps,end) = 1-p_decay;
else % if the choice is WEAK attention an final step
    tau_mat(:,nps,end) = 1;
end
